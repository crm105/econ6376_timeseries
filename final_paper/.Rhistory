df <- rbind(us, bra)
df <- spread(df, origin, price)
df$spread <- df$USA - df$BRA
plot(df$spread)
plot(df$spread, type = "l")
getwd()
setwd("Documents/active_projects/econ6376_timeseries/final_paper")
library("readxl")
library("zoo")
library(dplyr)
library(tidyr)
library(lubridate)
library(ggplot2)
library(forecast)
library(xts)
#library(data.table)
?xts
df <- read.csv("data/exports.csv", skip =6)
#Clean-up our columns a bit keeping only the ones were interested in, convert date to date
keep <- c("Date", "Country", "Exports", "Sales.2", "Sales.4")
df <- df[,keep]
colnames (df) <- c("date", "country", "exports","n.sales.cmy", "n.sales.nmy")
df$date <- as.Date(df$date, format = "%m/%d/%Y")
integers <- c("exports", "n.sales.cmy", "n.sales.cmy", "n.sales.nmy")
for (i in integers){
df[,i] <- as.numeric (gsub(",", "", df[,i]))
}
df$sales <- df$n.sales.cmy + df$n.sales.nmy
#Convert to monthly data and take the logs
df <- df %>%
select( date,country,exports,sales)  %>%
group_by( date = floor_date(date, "months"),country) %>%
summarise(exports = sum(exports), sales = sum(sales))
# df[df$exports < 1,]$exports <- 1
# df$exports <- log(df$exports)
#Drop non-country rows that are not relevant
df<- df[!df$country %in% c("KNOWN", "UNKNOWN"),]
#Create new frames with total and three major trade partners. Might Not Keep This. Am i missing a country?
EU <- c("AUSTRIA", "BULGARIA", "BELGIUM-LUXEMBOURG","DENMARK",
"CYPRUS", "CZECHIA", "ESTONIA","FINLAND", "FRANCE","GERMANY", "GREECE",
"HUNGARY", "IRELAND", "ITALY", "LATVIA", "LITHUANIA", "MALTA","NETHERLANDS",
"POLAND", "PORTUGAL", "ROMANIA", "SLOVAKIA", "SLOVENIA", "SPAIN","SWEDEN", "UNITED KINGDOM"
)
#Confirm the individual  EU countries sum to EU 27 and values are not repeated. This checks out
sum (df[df$country == "EUROPEAN UNION - 27",]$exports) -  sum (df[df$country %in% EU,]$exports)
sum(df[df$country == "GRAND TOTAL",]$exports) - sum(df[!df$country == "GRAND TOTAL", ]$exports)
#Keep only values we want. Drop November until data through end of the month is
#updated
df <- group_by(df, date) %>%
filter(country %in% c("GRAND TOTAL", "EUROPEAN UNION - 27", "CHINA, PEOPLES REPUBLIC OF" ))
df <- df[df$date < "2018-11-01",]
#This is some inneficient code that adds an ROW row
# exports <- c()
# sales <- c()
# date <- c()
# t <-1
# for (i in df$date){
#   exports[t] <- df[df$date == i & df$country == "GRAND TOTAL",]$exports -
#  ( df[!df$date == i & df$country == "CHINA, PEOPLES REPUBLIC OF",]$exports +
#     df[!df$date == i & df$country == "EUROPEAN UNION - 27",]$exports)
#
#   sales[t] <- df[df$date == i & df$country == "GRAND TOTAL",]$sales -
#     df[!df$date == i & df$country == "CHINA, PEOPLES REPUBLIC OF",]$sales
#     #df[!df$date == i & df$country == "EUROPEAN UNION - 27",]$sales
#   date[t] <- i
#   t <- t + 1
# }
# df <- setorder(df, date)
# row <- cbind(exports, sales)
# row <- data.frame(row)
# row$date <- df$date
# row$date <- Date(date)
# row$country <- "ROW"
# row <- unique(row)
# df <- data.frame(df)
# df<- rbind (df, row)
#Some Plots
ggplot(df, aes (x = date, y = exports, color = country))+
geom_line(stat = "identity")+
theme_classic()
#geom_line(  aes (x = month, y = net.sales), color = "red")
#Generate the intervention dummy. Let's try a gradual change
df$intervention <- 0
#df[df$date > "2018-03-01",]$intervention = 1
df[df$date == "2018-04-01",]$intervention = .25
df[df$date == "2018-05-01",]$intervention = .5
df[df$date == "2018-06-01",]$intervention = .75
df[df$date > "2018-06-01",]$intervention = 1
chn <- df[df$country == "CHINA, PEOPLES REPUBLIC OF",]
plot(chn$exports, type = "l")
eu <- df[df$country == "EUROPEAN UNION - 27",]
#Lets fit a best arima to the total exports to china
ts.chn <- ts(chn$exports,   frequency = 12 )
arima.chn <- auto.arima (ts.chn, trace = TRUE, seasonal = TRUE, allowdrift = TRUE, allowmean = TRUE,
xreg = df[df$country == "CHINA, PEOPLES REPUBLIC OF",]$intervention)
summary(arima.chn)
plot(arima.chn$residuals)
plot(ts.chn, type = "l")
lines(arima.chn$fitted, col = "red")
#Model fit for European Union
ts.eu <- ts(eu$exports,   frequency = 12)
arima.eu <- auto.arima (ts.eu, trace = TRUE, seasonal = TRUE, xreg = df[df$country == "EUROPEAN UNION - 27",]$intervention)
summary(arima.eu)
plot(arima.eu$residuals)
#Model fit for Grand Total
tot <- df[df$country == "GRAND TOTAL",]
tot <- tot %>% mutate(id = row_number())
tot$id <- tot$id - tot[tot$date == "2018-03-01",]$id
ts.tot <- ts(tot$exports,   frequency = 12)
arima.tot <- auto.arima (ts.tot, trace = TRUE, seasonal = TRUE, xreg = tot$intervention, allowdrift = TRUE, allowmean = TRUE )
summary(arima.tot)
plot(arima.tot$residuals)
acf(arima.tot$residuals)
plot(decompose(ts.tot, type = "additive"))
View(df)
View(tot)
View(df)
df <- mutate(df, id = rownames(df))
tot <- mutate(tot, id = rownames(tot))
xreg <- tot[,c("intervention", "id")]
View(tot)
View(xreg)
tot$intervention <- tot$intervention - tot[tot$date == "2018-03-01",]$intervention
xreg <- tot[,c("intervention", "id")]
arima.tot <- auto.arima (ts.tot, trace = TRUE, seasonal = TRUE, xreg = xreg, allowdrift = TRUE, allowmean = TRUE )
View(tot)
arima.tot <- auto.arima (ts.tot, trace = TRUE, seasonal = TRUE, xreg = tot$intervention, allowdrift = TRUE, allowmean = TRUE )
arima.tot <- auto.arima (ts.tot, trace = TRUE, seasonal = TRUE, xreg = xreg, allowdrift = TRUE, allowmean = TRUE )
xreg <- as.matrix (tot[,c("intervention", "id")])
arima.tot <- auto.arima (ts.tot, trace = TRUE, seasonal = TRUE, xreg = xreg, allowdrift = TRUE, allowmean = TRUE )
View(xreg)
tot <- mutate(tot, id = rownames(tot))
tot$intervention <- tot$intervention - tot[tot$date == "2018-03-01",]$intervention
xreg <- as.matrix (tot[,c("intervention", "id")])
View(xreg)
tot$intervention <- tot$id - tot[tot$date == "2018-03-01",]$id
tot <- mutate(tot, id = rownames(tot))
tot$intervention <- tot$id - tot[tot$date == "2018-03-01",]$id
tot$id <- numeric(tot$id)
tot$id <- as.numeric(tot$id)
tot$intervention <- tot$id - tot[tot$date == "2018-03-01",]$id
xreg <- as.matrix (tot[,c("intervention", "id")])
arima.tot <- auto.arima (ts.tot, trace = TRUE, seasonal = TRUE, xreg = xreg, allowdrift = TRUE, allowmean = TRUE )
View(xreg)
tot <- mutate(tot, id = rownames(tot))
tot$id <- as.numeric(tot$id)
tot$id <- tot$id - tot[tot$date == "2018-03-01",]$id
xreg <- as.matrix (tot[,c("intervention", "id")])
View(xreg)
getwd()
setwd("Documents/active_projects/econ6376_timeseries/final_paper")
library("readxl")
library("zoo")
library(dplyr)
library(tidyr)
library(lubridate)
library(ggplot2)
library(forecast)
library(xts)
#library(data.table)
?xts
df <- read.csv("data/exports.csv", skip =6)
#Clean-up our columns a bit keeping only the ones were interested in, convert date to date
keep <- c("Date", "Country", "Exports", "Sales.2", "Sales.4")
df <- df[,keep]
colnames (df) <- c("date", "country", "exports","n.sales.cmy", "n.sales.nmy")
df$date <- as.Date(df$date, format = "%m/%d/%Y")
integers <- c("exports", "n.sales.cmy", "n.sales.cmy", "n.sales.nmy")
for (i in integers){
df[,i] <- as.numeric (gsub(",", "", df[,i]))
}
df$sales <- df$n.sales.cmy + df$n.sales.nmy
#Convert to monthly data and take the logs
df <- df %>%
select( date,country,exports,sales)  %>%
group_by( date = floor_date(date, "months"),country) %>%
summarise(exports = sum(exports), sales = sum(sales))
# df[df$exports < 1,]$exports <- 1
# df$exports <- log(df$exports)
#Drop non-country rows that are not relevant
df<- df[!df$country %in% c("KNOWN", "UNKNOWN"),]
#Create new frames with total and three major trade partners. Might Not Keep This. Am i missing a country?
EU <- c("AUSTRIA", "BULGARIA", "BELGIUM-LUXEMBOURG","DENMARK",
"CYPRUS", "CZECHIA", "ESTONIA","FINLAND", "FRANCE","GERMANY", "GREECE",
"HUNGARY", "IRELAND", "ITALY", "LATVIA", "LITHUANIA", "MALTA","NETHERLANDS",
"POLAND", "PORTUGAL", "ROMANIA", "SLOVAKIA", "SLOVENIA", "SPAIN","SWEDEN", "UNITED KINGDOM"
)
#Confirm the individual  EU countries sum to EU 27 and values are not repeated. This checks out
sum (df[df$country == "EUROPEAN UNION - 27",]$exports) -  sum (df[df$country %in% EU,]$exports)
sum(df[df$country == "GRAND TOTAL",]$exports) - sum(df[!df$country == "GRAND TOTAL", ]$exports)
#Keep only values we want. Drop November until data through end of the month is
#updated
df <- group_by(df, date) %>%
filter(country %in% c("GRAND TOTAL", "EUROPEAN UNION - 27", "CHINA, PEOPLES REPUBLIC OF" ))
df <- df[df$date < "2018-11-01",]
#This is some inneficient code that adds an ROW row
# exports <- c()
# sales <- c()
# date <- c()
# t <-1
# for (i in df$date){
#   exports[t] <- df[df$date == i & df$country == "GRAND TOTAL",]$exports -
#  ( df[!df$date == i & df$country == "CHINA, PEOPLES REPUBLIC OF",]$exports +
#     df[!df$date == i & df$country == "EUROPEAN UNION - 27",]$exports)
#
#   sales[t] <- df[df$date == i & df$country == "GRAND TOTAL",]$sales -
#     df[!df$date == i & df$country == "CHINA, PEOPLES REPUBLIC OF",]$sales
#     #df[!df$date == i & df$country == "EUROPEAN UNION - 27",]$sales
#   date[t] <- i
#   t <- t + 1
# }
# df <- setorder(df, date)
# row <- cbind(exports, sales)
# row <- data.frame(row)
# row$date <- df$date
# row$date <- Date(date)
# row$country <- "ROW"
# row <- unique(row)
# df <- data.frame(df)
# df<- rbind (df, row)
#Some Plots
ggplot(df, aes (x = date, y = exports, color = country))+
geom_line(stat = "identity")+
theme_classic()
#geom_line(  aes (x = month, y = net.sales), color = "red")
#Generate the intervention dummy. Let's try a gradual change
df$intervention <- 0
#df[df$date > "2018-03-01",]$intervention = 1
df[df$date == "2018-04-01",]$intervention = .25
df[df$date == "2018-05-01",]$intervention = .5
df[df$date == "2018-06-01",]$intervention = .75
df[df$date > "2018-06-01",]$intervention = 1
chn <- df[df$country == "CHINA, PEOPLES REPUBLIC OF",]
plot(chn$exports, type = "l")
eu <- df[df$country == "EUROPEAN UNION - 27",]
#Lets fit a best arima to the total exports to china
ts.chn <- ts(chn$exports,   frequency = 12 )
arima.chn <- auto.arima (ts.chn, trace = TRUE, seasonal = TRUE, allowdrift = TRUE, allowmean = TRUE,
xreg = df[df$country == "CHINA, PEOPLES REPUBLIC OF",]$intervention)
summary(arima.chn)
plot(arima.chn$residuals)
plot(ts.chn, type = "l")
lines(arima.chn$fitted, col = "red")
#Model fit for European Union
ts.eu <- ts(eu$exports,   frequency = 12)
arima.eu <- auto.arima (ts.eu, trace = TRUE, seasonal = TRUE, xreg = df[df$country == "EUROPEAN UNION - 27",]$intervention)
summary(arima.eu)
plot(arima.eu$residuals)
#Model fit for Grand Total
tot <- df[df$country == "GRAND TOTAL",]
tot <- tot %>% mutate(id = row_number())
tot$id <- tot$id - tot[tot$date == "2018-03-01",]$id
ts.tot <- ts(tot$exports,   frequency = 12)
arima.tot <- auto.arima (ts.tot, trace = TRUE, seasonal = TRUE, xreg = tot$intervention, allowdrift = TRUE, allowmean = TRUE )
summary(arima.tot)
plot(arima.tot$residuals)
acf(arima.tot$residuals)
plot(decompose(ts.tot, type = "additive"))
tot <- mutate(tot, id = rownames(tot))
tot$id <- as.numeric(tot$id)
tot$id <- tot$id - tot[tot$date == "2018-03-01",]$id
xreg <- as.matrix (tot[,c("intervention", "id")])
View(xreg)
tot[tot$id < 1,]$id = 0
xreg <- as.matrix (tot[,c("intervention", "id")])
View(xreg)
getwd()
setwd("Documents/active_projects/econ6376_timeseries/final_paper")
library("readxl")
library("zoo")
library(dplyr)
library(tidyr)
library(lubridate)
library(ggplot2)
library(forecast)
library(xts)
#library(data.table)
df <- read.csv("data/exports.csv", skip =6)
#Clean-up our columns a bit keeping only the ones were interested in, convert date to date
keep <- c("Date", "Country", "Exports", "Sales.2", "Sales.4")
df <- df[,keep]
colnames (df) <- c("date", "country", "exports","n.sales.cmy", "n.sales.nmy")
df$date <- as.Date(df$date, format = "%m/%d/%Y")
integers <- c("exports", "n.sales.cmy", "n.sales.cmy", "n.sales.nmy")
for (i in integers){
df[,i] <- as.numeric (gsub(",", "", df[,i]))
}
df$sales <- df$n.sales.cmy + df$n.sales.nmy
#Convert to monthly data and take the logs
df <- df %>%
select( date,country,exports,sales)  %>%
group_by( date = floor_date(date, "months"),country) %>%
summarise(exports = sum(exports), sales = sum(sales))
# df[df$exports < 1,]$exports <- 1
# df$exports <- log(df$exports)
#Drop non-country rows that are not relevant
df<- df[!df$country %in% c("KNOWN", "UNKNOWN"),]
#Create new frames with total and three major trade partners. Might Not Keep This. Am i missing a country?
EU <- c("AUSTRIA", "BULGARIA", "BELGIUM-LUXEMBOURG","DENMARK",
"CYPRUS", "CZECHIA", "ESTONIA","FINLAND", "FRANCE","GERMANY", "GREECE",
"HUNGARY", "IRELAND", "ITALY", "LATVIA", "LITHUANIA", "MALTA","NETHERLANDS",
"POLAND", "PORTUGAL", "ROMANIA", "SLOVAKIA", "SLOVENIA", "SPAIN","SWEDEN", "UNITED KINGDOM"
)
#Confirm the individual  EU countries sum to EU 27 and values are not repeated. This checks out
sum (df[df$country == "EUROPEAN UNION - 27",]$exports) -  sum (df[df$country %in% EU,]$exports)
sum(df[df$country == "GRAND TOTAL",]$exports) - sum(df[!df$country == "GRAND TOTAL", ]$exports)
#Keep only values we want. Drop November until data through end of the month is
#updated
df <- group_by(df, date) %>%
filter(country %in% c("GRAND TOTAL", "EUROPEAN UNION - 27", "CHINA, PEOPLES REPUBLIC OF" ))
df <- df[df$date < "2018-11-01",]
#This is some inneficient code that adds an ROW row
# exports <- c()
# sales <- c()
# date <- c()
# t <-1
# for (i in df$date){
#   exports[t] <- df[df$date == i & df$country == "GRAND TOTAL",]$exports -
#  ( df[!df$date == i & df$country == "CHINA, PEOPLES REPUBLIC OF",]$exports +
#     df[!df$date == i & df$country == "EUROPEAN UNION - 27",]$exports)
#
#   sales[t] <- df[df$date == i & df$country == "GRAND TOTAL",]$sales -
#     df[!df$date == i & df$country == "CHINA, PEOPLES REPUBLIC OF",]$sales
#     #df[!df$date == i & df$country == "EUROPEAN UNION - 27",]$sales
#   date[t] <- i
#   t <- t + 1
# }
# df <- setorder(df, date)
# row <- cbind(exports, sales)
# row <- data.frame(row)
# row$date <- df$date
# row$date <- Date(date)
# row$country <- "ROW"
# row <- unique(row)
# df <- data.frame(df)
# df<- rbind (df, row)
#Some Plots
ggplot(df, aes (x = date, y = exports, color = country))+
geom_line(stat = "identity")+
theme_classic()
#geom_line(  aes (x = month, y = net.sales), color = "red")
#Generate the intervention dummy. Let's try a gradual change
df$intervention <- 0
#df[df$date > "2018-03-01",]$intervention = 1
df[df$date == "2018-04-01",]$intervention = .25
df[df$date == "2018-05-01",]$intervention = .5
df[df$date == "2018-06-01",]$intervention = .75
df[df$date > "2018-06-01",]$intervention = 1
chn <- df[df$country == "CHINA, PEOPLES REPUBLIC OF",]
plot(chn$exports, type = "l")
eu <- df[df$country == "EUROPEAN UNION - 27",]
#Lets fit a best arima to the total exports to china
ts.chn <- ts(chn$exports,   frequency = 12 )
arima.chn <- auto.arima (ts.chn, trace = TRUE, seasonal = TRUE, allowdrift = TRUE, allowmean = TRUE,
xreg = df[df$country == "CHINA, PEOPLES REPUBLIC OF",]$intervention)
summary(arima.chn)
plot(arima.chn$residuals)
plot(ts.chn, type = "l")
lines(arima.chn$fitted, col = "red")
#Model fit for European Union
ts.eu <- ts(eu$exports,   frequency = 12)
arima.eu <- auto.arima (ts.eu, trace = TRUE, seasonal = TRUE, xreg = df[df$country == "EUROPEAN UNION - 27",]$intervention)
summary(arima.eu)
plot(arima.eu$residuals)
#Model fit for Grand Total
tot <- df[df$country == "GRAND TOTAL",]
tot <- tot %>% mutate(id = row_number())
tot$id <- tot$id - tot[tot$date == "2018-03-01",]$id
ts.tot <- ts(tot$exports,   frequency = 12)
arima.tot <- auto.arima (ts.tot, trace = TRUE, seasonal = TRUE, xreg = tot$intervention, allowdrift = TRUE, allowmean = TRUE )
summary(arima.tot)
plot(arima.tot$residuals)
acf(arima.tot$residuals)
plot(decompose(ts.tot, type = "additive"))
getwd()
setwd("Documents/active_projects/econ6376_timeseries/final_paper")
library("readxl")
library("zoo")
library(dplyr)
library(tidyr)
library(lubridate)
library(ggplot2)
library(forecast)
library(xts)
#library(data.table)
df <- read.csv("data/exports.csv", skip =6)
#Clean-up our columns a bit keeping only the ones were interested in, convert date to date
keep <- c("Date", "Country", "Exports", "Sales.2", "Sales.4")
df <- df[,keep]
colnames (df) <- c("date", "country", "exports","n.sales.cmy", "n.sales.nmy")
df$date <- as.Date(df$date, format = "%m/%d/%Y")
integers <- c("exports", "n.sales.cmy", "n.sales.cmy", "n.sales.nmy")
for (i in integers){
df[,i] <- as.numeric (gsub(",", "", df[,i]))
}
df$sales <- df$n.sales.cmy + df$n.sales.nmy
#Convert to monthly data and take the logs
df <- df %>%
select( date,country,exports,sales)  %>%
group_by( date = floor_date(date, "months"),country) %>%
summarise(exports = sum(exports), sales = sum(sales))
# df[df$exports < 1,]$exports <- 1
# df$exports <- log(df$exports)
#Drop non-country rows that are not relevant
df<- df[!df$country %in% c("KNOWN", "UNKNOWN"),]
#Create new frames with total and three major trade partners. Might Not Keep This. Am i missing a country?
EU <- c("AUSTRIA", "BULGARIA", "BELGIUM-LUXEMBOURG","DENMARK",
"CYPRUS", "CZECHIA", "ESTONIA","FINLAND", "FRANCE","GERMANY", "GREECE",
"HUNGARY", "IRELAND", "ITALY", "LATVIA", "LITHUANIA", "MALTA","NETHERLANDS",
"POLAND", "PORTUGAL", "ROMANIA", "SLOVAKIA", "SLOVENIA", "SPAIN","SWEDEN", "UNITED KINGDOM"
)
#Confirm the individual  EU countries sum to EU 27 and values are not repeated. This checks out
sum (df[df$country == "EUROPEAN UNION - 27",]$exports) -  sum (df[df$country %in% EU,]$exports)
sum(df[df$country == "GRAND TOTAL",]$exports) - sum(df[!df$country == "GRAND TOTAL", ]$exports)
#Keep only values we want. Drop November until data through end of the month is
#updated
df <- group_by(df, date) %>%
filter(country %in% c("GRAND TOTAL", "EUROPEAN UNION - 27", "CHINA, PEOPLES REPUBLIC OF" ))
df <- df[df$date < "2018-11-01",]
#This is some inneficient code that adds an ROW row
# exports <- c()
# sales <- c()
# date <- c()
# t <-1
# for (i in df$date){
#   exports[t] <- df[df$date == i & df$country == "GRAND TOTAL",]$exports -
#  ( df[!df$date == i & df$country == "CHINA, PEOPLES REPUBLIC OF",]$exports +
#     df[!df$date == i & df$country == "EUROPEAN UNION - 27",]$exports)
#
#   sales[t] <- df[df$date == i & df$country == "GRAND TOTAL",]$sales -
#     df[!df$date == i & df$country == "CHINA, PEOPLES REPUBLIC OF",]$sales
#     #df[!df$date == i & df$country == "EUROPEAN UNION - 27",]$sales
#   date[t] <- i
#   t <- t + 1
# }
# df <- setorder(df, date)
# row <- cbind(exports, sales)
# row <- data.frame(row)
# row$date <- df$date
# row$date <- Date(date)
# row$country <- "ROW"
# row <- unique(row)
# df <- data.frame(df)
# df<- rbind (df, row)
#Some Plots
ggplot(df, aes (x = date, y = exports, color = country))+
geom_line(stat = "identity")+
theme_classic()
#geom_line(  aes (x = month, y = net.sales), color = "red")
#Generate the intervention dummy. Let's try a gradual change
df$intervention <- 0
#df[df$date > "2018-03-01",]$intervention = 1
df[df$date == "2018-04-01",]$intervention = .25
df[df$date == "2018-05-01",]$intervention = .5
df[df$date == "2018-06-01",]$intervention = .75
df[df$date > "2018-06-01",]$intervention = 1
chn <- df[df$country == "CHINA, PEOPLES REPUBLIC OF",]
plot(chn$exports, type = "l")
eu <- df[df$country == "EUROPEAN UNION - 27",]
#Lets fit a best arima to the total exports to china
ts.chn <- ts(chn$exports,   frequency = 12 )
arima.chn <- auto.arima (ts.chn, trace = TRUE, seasonal = TRUE, allowdrift = TRUE, allowmean = TRUE,
xreg = df[df$country == "CHINA, PEOPLES REPUBLIC OF",]$intervention)
summary(arima.chn)
plot(arima.chn$residuals)
plot(ts.chn, type = "l")
lines(arima.chn$fitted, col = "red")
#Model fit for European Union
ts.eu <- ts(eu$exports,   frequency = 12)
arima.eu <- auto.arima (ts.eu, trace = TRUE, seasonal = TRUE, xreg = df[df$country == "EUROPEAN UNION - 27",]$intervention)
summary(arima.eu)
plot(arima.eu$residuals)
#Model fit for Grand Total
tot <- df[df$country == "GRAND TOTAL",]
tot <- tot %>% mutate(id = row_number())
tot$id <- tot$id - tot[tot$date == "2018-03-01",]$id
ts.tot <- ts(tot$exports,   frequency = 12)
arima.tot <- auto.arima (ts.tot, trace = TRUE, seasonal = TRUE, xreg = tot$intervention, allowdrift = TRUE, allowmean = TRUE )
summary(arima.tot)
plot(arima.tot$residuals)
acf(arima.tot$residuals)
plot(decompose(ts.tot, type = "additive"))
View(df)
View(tot)
summary(arima.tot)
getwd()
setwd("Documents/active_projects/econ6376_timeseries/final_paper")
library("readxl")
library("zoo")
library(dplyr)
library(tidyr)
library(lubridate)
library(ggplot2)
library(forecast)
library(xts)
#library(data.table)
df <- read.csv("data/exports.csv", skip =6)
#Clean-up our columns a bit keeping only the ones were interested in, convert date to date
keep <- c("Date", "Country", "Exports", "Sales.2", "Sales.4")
df <- df[,keep]
colnames (df) <- c("date", "country", "exports","n.sales.cmy", "n.sales.nmy")
df$date <- as.Date(df$date, format = "%m/%d/%Y")
integers <- c("exports", "n.sales.cmy", "n.sales.cmy", "n.sales.nmy")
for (i in integers){
df[,i] <- as.numeric (gsub(",", "", df[,i]))
}
df$sales <- df$n.sales.cmy + df$n.sales.nmy
#Convert to monthly data and take the logs
df <- df %>%
select( date,country,exports,sales)  %>%
group_by( date = floor_date(date, "months"),country) %>%
summarise(exports = sum(exports), sales = sum(sales))
